#PIR
#exon-exon junction read count (EE)
awk '{print $1"_"$2"_"$3,$5}' OFS="\t" CB.intron.count.bed  | sort -k1,1 > CB.junction.count.txt
awk '{print $1"_"$2"_"$3}' constitutive.intron.bed | sort > constitutive.intron.list
join -1 1 -2 1 constitutive.intron.list CB.junction.count.txt > CB.exon_exon.count.txt



#exon-intron, intron-exon junction read count (EI+IE)
samtools sort -@16 -n CB.bam > CB.byname.bam 
~/software/pairedBamToBed12-pairedbamtobed12/bin/pairedBamToBed12 -i CB.byname.bam > CB.bed12
awk '{if($6=="+"){$6="-";print $0}else{$6="+";print $0}}' OFS="\t" CB.bed12 > CB.strandright.bed12
python ~/software/GFFtools-GX/bed_to_gff.py CB.strandright.bed12 > CB.strandright.bed12.gff
awk '{if($6=="+"){print $1,$2-2,$2+2,$4,$5,$6}else{print $1,$3-2,$3+2,$4,$5,$6}}' OFS="\t" constitutive.intron.bed > constutive.5SS.4bp.bed
awk '{if($6=="+"){print $1,$3-2,$3+2,$4,$5,$6}else{print $1,$2-2,$2+2,$4,$5,$6}}' OFS="\t" constitutive.intron.bed > constutive.3SS.4bp.bed 
awk '$3=="exon"{print $0}' CB.strandright.bed12.gff | awk '{print $1,$4-1,$5,$9,1,$7}' OFS="\t" > CB.strandright.gff.bed

awk '{print $1"_"$2"_"$3}' OFS="\t" constitutive.intron.bed | paste - constutive.3SS.4bp.bed | awk '{print $2,$3,$4,$1,$6,$7}' OFS="\t" > constutive.3SS.4bp.bed2
awk '{print $1"_"$2"_"$3}' OFS="\t" constitutive.intron.bed | paste - constutive.5SS.4bp.bed | awk '{print $2,$3,$4,$1,$6,$7}' OFS="\t" > constutive.5SS.4bp.bed2
mv constutive.5SS.4bp.bed2 constutive.5SS.4bp.bed
mv constutive.3SS.4bp.bed2 constutive.3SS.4bp.bed


bedtools intersect -a constutive.5SS.4bp.bed -b CB.strandright.gff.bed -wao -s > CB.strandright.5ss.intersect.txt
bedtools intersect -a constutive.3SS.4bp.bed -b CB.strandright.gff.bed -wao -s > CB.strandright.3ss.intersect.txt
awk '$13>=3{print $0}' CB.strandright.5ss.intersect.txt | cut -f 4,10 |  awk '!a[$0]++'  > CB.5ss.reads.ID.txt
awk '$13>=3{print $0}' CB.strandright.3ss.intersect.txt | cut -f 4,10 |  awk '!a[$0]++'  > CB.3ss.reads.ID.txt
cat CB.5ss.reads.ID.txt CB.3ss.reads.ID.txt |  awk '!a[$0]++' |  sort -k1,1 |  groupBy -g 1 -c 1 -o count > CB.exon_intron.count.txt



#############################################################################################
#PIR was calculated in R

require(dplyr)
ee<-read.table("CB.exon_exon.count.txt",head=F)
colnames(ee)<-c("intron","EE")
ei<-read.table("CB.exon_intron.count.txt",head=F)
colnames(ei)<-c("intron","EI")
intron<-data.frame(intron=union(ee$intron,ei$intron))
ee1<-merge(intron,ee)
ee2<-data.frame(intron=setdiff(intron$intron,ee1$intron))
ee2$EE=0
ee<-rbind(ee1,ee2)
ei1<-merge(intron,ei)
ei2<-data.frame(intron=setdiff(intron$intron,ei1$intron))
ei2$EI=0
ei<-rbind(ei1,ei2)
ee_ei<-merge(ee,ei)
ee_ei<-ee_ei[which(rowSums(ee_ei[,2:3])>=5),]
ee_ei<-mutate(ee_ei,PIR=EI/(EI+EE*2))
write.csv(ee_ei,CB.PIR.txt,row.names=F)

##################################################################################################



#SI index (take 3'CB as example)
awk '{if($6=="+"){print $1,$2-1,$2,$4,$5,$6}else{print $1,$3,$3+1,$4,$5,$6}}' OFS="\t" constitutive.intron.bed > constutive.SI.bed
coverageBed -a constutive.SI.bed -b 3CB.bed -s | cut -f 4,7 > 3CB.SI.count
awk '{if($6=="+"){print $1,$2-50,$2+50,$4,$5,$6}else{print $1,$3-50,$3+50,$4,$5,$6}}' OFS="\t" constitutive.intron.bed > constutive.EI50.bed
coverageBed -a constutive.EI50.bed -b 3CB.bed -s | cut -f 7> 3CB.EI50.count
paste 3CB.SI.count 3CB.EI50.count | awk '{print $4=$2/$3;print $0}' OFS="\t" > 3CB.SI.index.txt


#lariat index (take 3'CB as example)
awk '{if($6=="+"){print $1,$3-1,$3,$4,$5,$6}else{print $1,$2,$2+1,$4,$5,$6}}' OFS="\t" constitutive.intron.bed > constutive.Lariat.bed
coverageBed -a constutive.Lariat.bed -b 3CB.bed -s | cut -f 4,7 > 3CB.Lariat.count
awk '{if($6=="+"){print $1,$3-50,$3+50,$4,$5,$6}else{print $1,$2-50,$2+50,$4,$5,$6}}' OFS="\t" constitutive.intron.bed > constutive.IE50.bed
coverageBed -a constutive.IE50.bed -b 3CB.bed -s | cut -f 7 > 3CB.IE50.count
paste 3CB.Lariat.count 3CB.IE50.count | awk '{print $4=$2/$3;print $0}' OFS="\t" > 3CB.Lariat.index.txt

